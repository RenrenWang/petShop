Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Volumes/work/reactnative/petShop/js/components/Timing.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _react_native_countdowntimer = require('react_native_countdowntimer');

var _react_native_countdowntimer2 = babelHelpers.interopRequireDefault(_react_native_countdowntimer);

var Timing = function (_Component) {
    babelHelpers.inherits(Timing, _Component);

    function Timing(props) {
        babelHelpers.classCallCheck(this, Timing);

        var _this = babelHelpers.possibleConstructorReturn(this, (Timing.__proto__ || Object.getPrototypeOf(Timing)).call(this, props));

        _this.countDown = null;
        _this.state = {
            endTime: _this.props.endTime
        };

        return _this;
    }

    babelHelpers.createClass(Timing, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            if (nextProps.endTime == this.props.endTime) {

                return true;
            } else {
                return false;
            }
        }
    }, {
        key: 'render',
        value: function render() {

            return _react2.default.createElement(
                _reactNative.View,
                { style: { marginTop: this.props.mTop ? this.props.mTop : 0, marginLeft: this.props.mLeft ? this.props.mLeft : 0 }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 90
                    }
                },
                _react2.default.createElement(_react_native_countdowntimer2.default, {
                    date: new Date(this.state.endTime),

                    days: { plural: '天', singular: '天' },
                    hours: ':',
                    mins: ':',
                    segs: '',
                    daysStyle: [styles.timeText, styles.daysText],
                    hoursStyle: styles.timeText,
                    minsStyle: styles.timeText,
                    secsStyle: styles.timeText,

                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 91
                    }
                })
            );
        }
    }]);
    return Timing;
}(_react.Component);

exports.default = Timing;


var styles = _reactNative.StyleSheet.create({
    box: {
        flexDirection: 'row',
        alignItems: 'center'
    },

    timeText: {
        height: 20,
        width: 25,
        backgroundColor: '#000',
        marginHorizontal: 3,
        justifyContent: 'center',
        borderRadius: 2,
        color: '#fff',
        fontSize: 14,
        textAlign: 'center'
    },
    daysText: {
        height: 20,
        width: 40
    },
    semicolon: {

        fontSize: 14,
        color: "#000"

    }
});