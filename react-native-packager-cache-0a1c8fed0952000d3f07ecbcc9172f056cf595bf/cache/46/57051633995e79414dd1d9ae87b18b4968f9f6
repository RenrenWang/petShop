Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Volumes/work/reactnative/petShop/js/page/SetMealD.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _lodash = require('lodash');

var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

var _StyleConfig = require('../base/StyleConfig');

var _StyleConfig2 = babelHelpers.interopRequireDefault(_StyleConfig);

var _config = require('../config');

var _config2 = babelHelpers.interopRequireDefault(_config);

var _HomeHeader = require('../components/HomeHeader');

var _HomeHeader2 = babelHelpers.interopRequireDefault(_HomeHeader);

var _Loading = require('../components/Loading');

var _Loading2 = babelHelpers.interopRequireDefault(_Loading);

var _reactNativeHtmlview = require('react-native-htmlview');

var _reactNativeHtmlview2 = babelHelpers.interopRequireDefault(_reactNativeHtmlview);

var _LoadingImg = require('../components/LoadingImg');

var _LoadingImg2 = babelHelpers.interopRequireDefault(_LoadingImg);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var SpecialOffer = function (_React$Component) {
  babelHelpers.inherits(SpecialOffer, _React$Component);

  function SpecialOffer(props) {
    babelHelpers.classCallCheck(this, SpecialOffer);

    var _this = babelHelpers.possibleConstructorReturn(this, (SpecialOffer.__proto__ || Object.getPrototypeOf(SpecialOffer)).call(this, props));

    _this.state = {
      meal: [],
      swiperShow: false,

      isLoading: true

    };
    return _this;
  }

  babelHelpers.createClass(SpecialOffer, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      fetch(_config2.default.MEALD + this.props.navigation.state.params.id).then(function (response) {
        return response.json();
      }).then(function (responseJson) {
        if (responseJson.result == "success") {
          _this2.setState({
            meal: responseJson.mealData[0],

            isLoading: false
          });
        } else {
          _this2.setState({
            meal: [],

            isLoading: false
          });
        }
      }).catch(function (err) {
        _this2.setState({
          isLoading: true,
          error: "网络加载失败，请稍后重试"
        });
      });
    }
  }, {
    key: 'addCart',
    value: function addCart() {
      var _this3 = this;

      if (!this.props.screenProps.user) return Alert.alert('提示', '未登录，请先登录', [{ text: '确定', onPress: function onPress() {
          return console.log('OK Pressed');
        } }], { cancelable: false });
      fetch(_config2.default.ADDCART + this.props.screenProps.user.pinfoId + '&prdNums=1&prdIds=' + this.props.navigation.state.params.id).then(function (response) {
        return response.json();
      }).then(function (responseJson) {
        alert(JSON.stringify(responseJson));

        if (responseJson.result == "success") {
          _this3.refs.toast.show('商品已加入购物车~~', DURATION.LENGTH_LONG);
          DeviceEventEmitter.emit('cartChange', "商品加入购物车");
        }
      });
    }
  }, {
    key: 'renderBottom',
    value: function renderBottom() {
      var _this4 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: { backgroundColor: "#fff", flexDirection: 'row', height: 50, borderTopColor: _StyleConfig2.default.colors.lineColor, borderTopWidth: 1 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            activeOpacity: 1,

            style: { height: 50, flex: 1, alignItems: 'center', justifyContent: 'center', borderRightWidth: 1, borderRightColor: _StyleConfig2.default.colors.lineColor },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 113
            }
          },
          _react2.default.createElement(_reactNative.Image, {
            source: require('../static/images/newsD.png'),
            style: { tintColor: _StyleConfig2.default.colors.hColor, height: 25,
              width: 25 },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 121
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            activeOpacity: 1,

            style: { height: 50, flex: 1, alignItems: 'center', justifyContent: 'center', borderRightWidth: 1, borderRightColor: _StyleConfig2.default.colors.lineColor },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 127
            }
          },
          _react2.default.createElement(_reactNative.Image, {
            source: require('../static/images/star.png'),
            style: { tintColor: _StyleConfig2.default.colors.hColor, height: 25,
              width: 25 },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 135
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            activeOpacity: 1,
            onPress: function onPress() {
              return _this4.props.navigation.navigate("Cart");
            },
            style: { height: 50, flex: 1, alignItems: 'center', justifyContent: 'center', borderRightWidth: 1, borderRightColor: _StyleConfig2.default.colors.lineColor },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 141
            }
          },
          _react2.default.createElement(_reactNative.Image, {
            source: require('../static/images/cart.png'),
            style: { height: 25,
              width: 25 },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 146
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            activeOpacity: 1,

            onPress: this.addCart.bind(this),
            style: { height: 50, width: width / 4, alignItems: 'center', justifyContent: 'center' },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 153
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: { color: _StyleConfig2.default.colors.mainColor, fontSize: _StyleConfig2.default.fontSize.size_14 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 162
              }
            },
            '\u52A0\u5165\u8D2D\u7269\u8F66'
          )
        ),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            activeOpacity: 1,
            onPress: _lodash2.default.throttle(this.toOrder.bind(this, this.state.meal.gcollIds), 1000, {

              'trailing': false
            }),
            style: { height: 50, width: width / 4, backgroundColor: _StyleConfig2.default.colors.mainColor, alignItems: 'center', justifyContent: 'center' },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 164
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: { color: "#fff", fontSize: _StyleConfig2.default.fontSize.size_14 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 172
              }
            },
            '\u7ACB\u5373\u8D2D\u4E70'
          )
        )
      );
    }
  }, {
    key: 'toOrder',
    value: function toOrder(id) {
      if (!this.props.screenProps.user) return Alert.alert('提示', '未登录，请先登录', [{ text: '确定', onPress: function onPress() {
          return console.log('OK Pressed');
        } }], { cancelable: false });
      return this.props.navigation.navigate("Order", { prdIdsList: [id], prdNumsList: [this.state.numberGoods] });
    }
  }, {
    key: 'render',
    value: function render() {
      return !this.state.isLoading ? _react2.default.createElement(
        _reactNative.View,
        { style: { flex: 1, flexDirection: 'column', backgroundColor: '#fff' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 194
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: { flex: 1, flexDirection: 'column', justifyContent: 'space-between' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 206
            }
          },
          _react2.default.createElement(
            _reactNative.ScrollView,
            {
              horizontal: false,
              style: { flex: 1, flexDirection: 'column' }, __source: {
                fileName: _jsxFileName,
                lineNumber: 208
              }
            },
            this.state.meal.gcollImgnuri ? _react2.default.createElement(_reactNativeHtmlview2.default, {
              style: { justifyContent: 'center', alignItems: 'center' },
              value: '<img src="' + _config2.default.BASEURL + this.state.meal.gcollImgnuri + '"  style="width:100%"/>',
              __source: {
                fileName: _jsxFileName,
                lineNumber: 222
              }
            }) : null
          ),
          this.renderBottom()
        )
      ) : _react2.default.createElement(_Loading2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 231
        }
      });
    }
  }]);
  return SpecialOffer;
}(_react2.default.Component);

SpecialOffer.navigationOptions = {
  tabBarLabel: '特价',

  tabBarIcon: function tabBarIcon(_ref) {
    var tintColor = _ref.tintColor;
    return _react2.default.createElement(_reactNative.Image, {
      source: require('../static/images/specialOffer.png'),
      style: [{ tintColor: tintColor }, _StyleConfig2.default.tabIcon],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 27
      }
    });
  }
};
exports.default = SpecialOffer;