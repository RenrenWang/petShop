Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Volumes/work/reactnative/petShop/js/page/Login.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _StyleConfig = require('../base/StyleConfig');

var _StyleConfig2 = babelHelpers.interopRequireDefault(_StyleConfig);

var _NavBar = require('../components/NavBar');

var _NavBar2 = babelHelpers.interopRequireDefault(_NavBar);

var _LoadingImg = require('../components/LoadingImg');

var _LoadingImg2 = babelHelpers.interopRequireDefault(_LoadingImg);

var _reactNavigation = require('react-navigation');

var _config = require('../config');

var _config2 = babelHelpers.interopRequireDefault(_config);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var Login = function (_React$Component) {
    babelHelpers.inherits(Login, _React$Component);

    function Login(props) {
        babelHelpers.classCallCheck(this, Login);

        var _this = babelHelpers.possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

        _this.placeholderUsename = "邮箱/手机号/用户名";
        _this.placeholderPassword = "密码";
        _this.state = {
            username: "",
            password: "",
            isLogin: false
        };
        return _this;
    }

    babelHelpers.createClass(Login, [{
        key: 'toUrl',
        value: function toUrl(url) {
            var navigation = this.props.navigation;
            if (url == "Home") {
                navigation.goBack();
            } else {
                navigation.navigate(url);
            }
        }
    }, {
        key: 'login',
        value: function login() {
            var _this2 = this;

            if (!this.state.username || this.state.username.length <= 0) {

                return _reactNative.Alert.alert('', '用户名不能为空', [{ text: '确定', onPress: function onPress() {
                        return console.log('OK Pressed');
                    } }], { cancelable: false });
            }

            if (!this.state.password || this.state.password.length <= 0) {

                return _reactNative.Alert.alert('', '密码不能为空', [{ text: '确定', onPress: function onPress() {
                        return console.log('OK Pressed');
                    } }], { cancelable: false });
            }
            this.setState({
                isLogin: true
            });
            fetch(_config2.default.LOGIN + this.state.username + '&userLoginPwd=' + this.state.password).then(function (response) {
                return response.json();
            }).then(function (responseJson) {

                _this2.setState({
                    isLogin: false
                });

                if (responseJson.result == 'fail') {
                    _reactNative.Alert.alert('', responseJson.msg, [{ text: '确定', onPress: function onPress() {
                            return console.log('OK Pressed');
                        } }], { cancelable: false });
                } else if (responseJson.result == 'success') {
                    var data = responseJson;
                    storage.save({
                        key: 'user',
                        data: data
                    });
                    _reactNative.DeviceEventEmitter.emit('userNameDidChange', responseJson);

                    _reactNative.Alert.alert('提示', responseJson.msg, [{
                        text: '确定', onPress: function onPress() {

                            var resetAction = _reactNavigation.NavigationActions.reset({
                                index: 0,
                                actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'TabScreen' })]
                            });
                            _this2.props.navigation.dispatch(resetAction);
                        }

                    }], { cancelable: false });
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: { flex: 1, alignItems: 'center', backgroundColor: "#fff" }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 146
                    }
                },
                _react2.default.createElement(_LoadingImg2.default, { isModal: this.state.isLogin, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 151
                    }
                }),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { borderColor: "#dcdcdc", borderWidth: 1, borderRadius: 5, marginTop: 25 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 152
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: { position: 'relative' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 153
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            underlineColorAndroid: 'transparent',
                            style: { paddingLeft: 36, color: "#999", borderTopLeftRadius: 5, borderTopRightRadius: 5, backgroundColor: '#fff', width: width - 20, height: 50, borderBottomColor: "#dcdcdc", borderBottomWidth: 1 },
                            onChangeText: function onChangeText(username) {
                                return _this3.setState({ username: username });
                            },
                            value: this.state.username,
                            placeholder: this.placeholderUsename,
                            selectionColor: "#999",
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 154
                            }
                        }),
                        _react2.default.createElement(_reactNative.Image, {
                            style: { tintColor: "#999", height: 22, width: 22, position: 'absolute', top: 13, left: 7 },
                            source: require('../static/images/myIcon.png'),
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 162
                            }
                        })
                    ),
                    _react2.default.createElement(_reactNative.View, { style: { backgroundColor: "#dcdcdc", height: 1, width: width - 20 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 167
                        }
                    }),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: { position: 'relative' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 168
                            }
                        },
                        _react2.default.createElement(_reactNative.TextInput, {
                            underlineColorAndroid: 'transparent',
                            style: { paddingLeft: 36, color: "#999", borderBottomLeftRadius: 5, borderBottomRightRadius: 5, backgroundColor: '#fff', width: width - 20, height: 50 },
                            onChangeText: function onChangeText(password) {
                                return _this3.setState({ password: password });
                            },
                            value: this.state.password,
                            placeholder: this.placeholderPassword,
                            secureTextEntry: true,
                            selectionColor: "#999",
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 169
                            }
                        }),
                        _react2.default.createElement(_reactNative.Image, {
                            style: { tintColor: "#999", height: 22, width: 22, position: 'absolute', top: 13, left: 7 },
                            source: require('../static/images/passwordIcon.png'),
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 178
                            }
                        })
                    )
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                        activeOpacity: 0.8,
                        style: { marginVertical: 25, borderRadius: 5, width: width - 20, backgroundColor: _StyleConfig2.default.colors.mainColor, height: 45, alignItems: 'center', justifyContent: 'center' },
                        onPress: this.login.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 186
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: { color: "#fff", fontSize: 16 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 191
                            }
                        },
                        '\u767B\u5F55'
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { width: width - 20, flexDirection: 'row', justifyContent: 'space-between' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 194
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { onPress: this.toUrl.bind(this, 'Register'), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 197
                            }
                        },
                        '\u65B0\u7528\u6237\u6CE8\u518C'
                    )
                )
            );
        }
    }]);
    return Login;
}(_react2.default.Component);

exports.default = Login;