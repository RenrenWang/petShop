Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Volumes/work/reactnative/petShop/js/page/Register.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _lodash = require('lodash');

var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

var _StyleConfig = require('../base/StyleConfig');

var _StyleConfig2 = babelHelpers.interopRequireDefault(_StyleConfig);

var _config = require('../config');

var _config2 = babelHelpers.interopRequireDefault(_config);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var Login = function (_React$Component) {
    babelHelpers.inherits(Login, _React$Component);

    function Login(props) {
        babelHelpers.classCallCheck(this, Login);

        var _this = babelHelpers.possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

        _this.placeholderEmail = "邮箱";
        _this.placeholderPhoneNumber = "手机号", _this.placeholderUsename = "邮箱/手机号用户名";
        _this.placeholderPassword = "密码";
        _this.state = {
            username: null,
            password: null,
            phoneNumber: null,
            email: null
        };
        return _this;
    }

    babelHelpers.createClass(Login, [{
        key: 'register',
        value: function register() {
            var _this2 = this;

            if (!this.state.username) {
                return _reactNative.Alert.alert('', '账号不能为空', [{ text: '确定', onPress: function onPress() {
                        return console.log('OK Pressed');
                    } }], { cancelable: false });
            }
            if (!this.state.password || this.state.password == "") {
                return _reactNative.Alert.alert('', '密码不能为空', [{ text: '确定', onPress: function onPress() {
                        return console.log('OK Pressed');
                    } }], { cancelable: false });
            }

            fetch(_config2.default.REGISTER + '&userLogin=' + this.state.username + '&userLoginPwd=' + this.state.password).then(function (response) {
                return response.json();
            }).then(function (responseJson) {
                if (responseJson.result == "fail") {
                    _reactNative.Alert.alert('', responseJson.msg, [{ text: '确定', onPress: function onPress() {
                            return console.log("fail");
                        } }], { cancelable: false });
                } else if (responseJson.result == "success") {
                    _this2.setState({
                        username: null,
                        password: null,
                        phoneNumber: null,
                        email: null
                    });
                    _reactNative.Alert.alert('', "注册成功", [{ text: '确定', onPress: function onPress() {
                            return _this2.props.navigation.goBack();
                        } }], { cancelable: false });
                }
            });
        }
    }, {
        key: 'toUrl',
        value: function toUrl() {

            this.props.navigation.navigate('Register');
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: { flex: 1, alignItems: 'center', backgroundColor: "#fff" }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 127
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { marginTop: 10 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 130
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, {
                        underlineColorAndroid: 'transparent',
                        style: { marginVertical: 5, borderColor: "#dcdcdc", borderWidth: 1, color: "#999", backgroundColor: '#fff', width: width - 15, height: 50, borderBottomColor: "#dcdcdc", borderBottomWidth: 1 },
                        onChangeText: function onChangeText(username) {
                            return _this3.setState({ username: _lodash2.default.trim(username) });
                        },
                        value: this.state.username,
                        placeholder: this.placeholderUsename,
                        selectionColor: "#999",
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 150
                        }
                    }),
                    _react2.default.createElement(_reactNative.TextInput, {
                        underlineColorAndroid: 'transparent',
                        style: { marginVertical: 5, color: "#999", borderColor: "#dcdcdc", borderWidth: 1, backgroundColor: '#fff', width: width - 15, height: 50 },
                        onChangeText: function onChangeText(password) {
                            return _this3.setState({ password: _lodash2.default.trim(password) });
                        },
                        value: this.state.password,
                        placeholder: this.placeholderPassword,
                        secureTextEntry: true,
                        selectionColor: "#999",
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 160
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                        activeOpacity: 0.8,
                        onPress: this.register.bind(this),
                        style: { marginVertical: 25, borderRadius: 5, width: width - 15, backgroundColor: _StyleConfig2.default.colors.mainColor, height: 50, alignItems: 'center', justifyContent: 'center' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 172
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: { color: "#fff", fontSize: 16 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 176
                            }
                        },
                        '\u6CE8\u518C'
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { width: width - 15, flexDirection: 'row' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 178
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 179
                            }
                        },
                        '\u70B9\u51FB-\u6CE8\u518C\uFF0C\u5373\u8868\u793A\u540C\u610F'
                    ),
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: { color: _StyleConfig2.default.colors.mainColor }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 180
                            }
                        },
                        '\u300A\u670D\u52A1\u6761\u6B3E\u53CA\u9690\u79C1\u534F\u8BAE\u300B'
                    )
                )
            );
        }
    }]);
    return Login;
}(_react2.default.Component);

exports.default = Login;