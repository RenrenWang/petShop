Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Volumes/work/reactnative/petShop/js/page/Classify.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _config = require('../config');

var _config2 = babelHelpers.interopRequireDefault(_config);

var _ClassifyHeader = require('../components/ClassifyHeader');

var _ClassifyHeader2 = babelHelpers.interopRequireDefault(_ClassifyHeader);

var _MyListView = require('../components/MyListView');

var _MyListView2 = babelHelpers.interopRequireDefault(_MyListView);

var _StyleConfig = require('../base/StyleConfig');

var _StyleConfig2 = babelHelpers.interopRequireDefault(_StyleConfig);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var filters = [{ id: 1, name: "综合", subPrdType: "A" }, { id: 2, name: "销量", subPrdType: "D" }, { id: 3, name: "价格", subPrdType: "C" }, { id: 4, name: "筛选", icon: require('../static/images/filter.png'), subPrdType: "ALL" }];

var Classify = function (_React$Component) {
    babelHelpers.inherits(Classify, _React$Component);

    function Classify(props) {
        babelHelpers.classCallCheck(this, Classify);

        var _this = babelHelpers.possibleConstructorReturn(this, (Classify.__proto__ || Object.getPrototypeOf(Classify)).call(this, props));

        _this.state = {
            itemActive: 0,
            type: "A",
            isModal: false,
            classList: [],
            rFilters: {},
            filterStr: "",
            orderBy: "A",
            searchStr: ""

        };
        return _this;
    }

    babelHelpers.createClass(Classify, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var url = null;
            switch (this.props.navigation.state.params.classId) {
                case "CW":
                    url = _config2.default.CWCATCLASS;break;
                case "ZL":
                    url = _config2.default.ZLCATCLASS;break;
                case "LY":
                    url = _config2.default.LYCATCLASS;break;
                case "YP":
                    url = _config2.default.YPCATCLASS;break;
            }
            fetch(url).then(function (response) {
                return response.json();
            }).then(function (responseJson) {
                if (responseJson.result == "success") {
                    console.log(JSON.stringify(responseJson.fieldsData));
                    var data = responseJson.fieldsData;
                    var rFilters = [];
                    data.map(function (item, index) {
                        if (item.classData) {
                            data = data;
                            rFilters.push({ "f": index, "s": -1, "codeName": "", "type": item.type });
                        }
                    });
                    _this2.setState({
                        classList: data,
                        rFilters: rFilters
                    });
                }
            });
        }
    }, {
        key: 'selectFilters',
        value: function selectFilters(index, sindex, codeName) {

            console.log(JSON.stringify(this.state.rFilters));
            var data = this.state.rFilters;
            data[index]['s'] = data[index]['s'] == sindex ? -1 : sindex;
            data[index]['codeName'] = codeName;
            this.setState({
                rFilters: data
            });
        }
    }, {
        key: '_resetting',
        value: function _resetting() {
            var data = this.state.rFilters;
            this.state.rFilters.map(function (item, index) {
                data[index]['s'] = -1;
                data[index]['codeName'] = "";
            });
            this.setState({
                rFilters: data
            });
        }
    }, {
        key: '_confirm',
        value: function _confirm() {
            var str = "";
            this.state.rFilters.map(function (item, index) {
                if (item.s != -1) str += "&" + item.type + "=" + item.codeName;
            });
            this.setState({
                filterStr: str
            });
            console.log(str);
            this._setModalVisible(false);
        }
    }, {
        key: 'renderItem',
        value: function renderItem(data, index) {
            var _this3 = this;

            var items = [];

            if (data) {

                {
                    data.map(function (sitem, sindex) {
                        items.push(_react2.default.createElement(
                            _reactNative.TouchableOpacity,
                            {
                                activeOpacity: 1,
                                key: sindex,
                                onPress: _this3.selectFilters.bind(_this3, index, sindex, sitem.codeName),
                                style: { borderRadius: 6, marginHorizontal: 10, marginVertical: 5, backgroundColor: _this3.state.rFilters[index]['f'] == index && _this3.state.rFilters[index]['s'] == sindex ? _StyleConfig2.default.colors.mainColor : "#e9e9e9", height: 32, width: (width * 0.8 - 60) / 3, alignItems: 'center', justifyContent: 'center' }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 153
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: { color: _this3.state.rFilters[index]['f'] == index && _this3.state.rFilters[index]['s'] == sindex ? "#fff" : _StyleConfig2.default.colors.HSCOlor, fontSize: _StyleConfig2.default.fontSize.size_12 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 158
                                    }
                                },
                                sitem.codeValue
                            )
                        ));
                    });
                }

                return items;
            } else {
                return null;
            }
        }
    }, {
        key: 'renderRighFilterItem',
        value: function renderRighFilterItem(data) {
            var _this4 = this;

            var List = [];

            data.map(function (item, index) {
                List.push(_react2.default.createElement(
                    _reactNative.View,
                    {
                        key: index,
                        style: { flexDirection: 'column', borderBottomColor: _StyleConfig2.default.colors.hBgColor, borderBottomWidth: 2 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 175
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: {
                                borderLeftWidth: 3,
                                borderColor: _StyleConfig2.default.colors.mainColor,
                                margin: 10,
                                marginVertical: 5,
                                paddingHorizontal: 5
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 178
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                style: {
                                    fontSize: _StyleConfig2.default.fontSize.size_16 },
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 185
                                }
                            },
                            item.title
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: { flexWrap: 'wrap', flexDirection: 'row' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 191
                            }
                        },
                        _this4.renderItem(item.classData, index)
                    )
                ));
            });

            return _react2.default.createElement(
                _reactNative.ScrollView,
                {
                    horizontal: false,
                    style: { flex: 1 },
                    style: { flex: 1 }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 199
                    }
                },
                List
            );
        }
    }, {
        key: '_setModalVisible',
        value: function _setModalVisible(visible) {

            console.log("------>" + this.state.filterStr);
            this.setState({
                isModal: visible
            });
        }
    }, {
        key: 'renderRighFilter',
        value: function renderRighFilter() {
            var styles = {
                footerItem: {
                    flex: 1,
                    justifyContent: 'center',
                    alignItems: 'center'
                },
                footerItemText: {
                    color: _StyleConfig2.default.colors.cColor,
                    fontSize: _StyleConfig2.default.fontSize.size_16
                }
            };
            return _react2.default.createElement(
                _reactNative.Modal,
                {

                    visible: this.state.isModal,
                    transparent: true,
                    onRequestClose: function onRequestClose() {
                        _reactNative.Platform.OS === 'android' ? null : null;
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 227
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { flex: 1, backgroundColor: 'rgba(0,0,0,0.3)' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 234
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: { width: width * 0.8, flex: 1, backgroundColor: '#fff', justifyContent: 'flex-end', alignSelf: 'flex-end', flexDirection: 'column' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 235
                            }
                        },
                        this.renderRighFilterItem(this.state.classList),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: { height: 45, flexDirection: 'row', borderTopWidth: 1,
                                    borderColor: _StyleConfig2.default.colors.lineColor }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 240
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                {
                                    activeOpacity: 1,
                                    style: styles.footerItem,
                                    onPress: this._setModalVisible.bind(this, false),
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 242
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: styles.footerItemText,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 247
                                        }
                                    },
                                    '\u53D6\u6D88'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                {
                                    activeOpacity: 1,
                                    onPress: this._resetting.bind(this),
                                    style: styles.footerItem,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 251
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: styles.footerItemText,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 256
                                        }
                                    },
                                    '\u91CD\u7F6E'
                                )
                            ),
                            _react2.default.createElement(
                                _reactNative.TouchableOpacity,
                                {
                                    activeOpacity: 1,
                                    onPress: this._confirm.bind(this),
                                    style: [styles.footerItem, { backgroundColor: _StyleConfig2.default.colors.mainColor }],
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 260
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: [styles.footerItemText, { color: "#fff" }],
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 265
                                        }
                                    },
                                    '\u786E\u5B9A'
                                )
                            )
                        )
                    )
                )
            );
        }
    }, {
        key: '_filterItemActive',
        value: function _filterItemActive(index, subPrdType) {
            if (subPrdType == "ALL") {
                this._setModalVisible(!this.state.isModal);
            } else {

                if (subPrdType == "C") {
                    this.setState({
                        orderBy: this.state.orderBy == "A" ? "D" : "A"
                    });
                }
                this.setState({
                    itemActive: index,
                    type: subPrdType
                });
            }
        }
    }, {
        key: 'renderFilters',
        value: function renderFilters(_filters) {
            var _this5 = this;

            var ViewList = [];
            _filters.map(function (item, index) {
                ViewList.push(_react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                        activeOpacity: 1,
                        key: index,
                        onPress: _this5._filterItemActive.bind(_this5, index, item.subPrdType),
                        style: [styles.filterItem, { flexDirection: 'row' }], key: item.id, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 303
                        }
                    },
                    item.subPrdType == "ALL" ? _react2.default.createElement(_reactNative.Image, { style: { height: 18, width: 18, tintColor: _StyleConfig2.default.colors.B6Color, paddingVertical: 6 }, source: item.icon, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 309
                        }
                    }) : _react2.default.createElement(
                        _reactNative.Text,
                        { style: [styles.filterItemFont, index == _this5.state.itemActive ? styles.filterItemFontActive : null], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 309
                            }
                        },
                        item.name
                    ),
                    item.subPrdType == "C" ? _react2.default.createElement(
                        _reactNative.View,
                        { style: { flexDirection: 'column', justifyContent: 'center', marginLeft: 5 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 310
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { style: { height: 10, width: 10, tintColor: _this5.state.orderBy == "A" ? "#000" : _StyleConfig2.default.colors.hColor }, source: require('../static/images/sTop.png'), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 311
                            }
                        }),
                        _react2.default.createElement(_reactNative.Image, { style: { height: 10, width: 10, tintColor: _this5.state.orderBy == "D" ? "#000" : _StyleConfig2.default.colors.hColor }, source: require('../static/images/sBottom.png'), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 312
                            }
                        })
                    ) : null
                ));
            });

            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.filters, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 318
                    }
                },
                ViewList
            );
        }
    }, {
        key: 'chageKeyCode',
        value: function chageKeyCode(KeyCode) {
            this.setState({
                searchStr: KeyCode
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props$navigation = this.props.navigation,
                goBack = _props$navigation.goBack,
                state = _props$navigation.state;


            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 332
                    }
                },
                _react2.default.createElement(_ClassifyHeader2.default, {
                    navigation: this.props.navigation,
                    navBarLeftAction: function navBarLeftAction() {
                        return goBack();
                    },
                    selectName: state.params.name,
                    chageKeyCode: this.chageKeyCode.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 334
                    }
                }),
                this.renderFilters(filters),
                this.renderRighFilter(),
                _react2.default.createElement(_MyListView2.default, {
                    swipeEnabled: true,
                    contentContainerStyle: { paddingHorizontal: 5, flexWrap: 'wrap', justifyContent: 'space-between', flexDirection: 'row' },
                    animationEnabled: true,
                    removeClippedSubviews: false,

                    url: _config2.default.ClASSIFY + '&prdType=' + state.params.classId + '&subPrdType=' + this.state.type + "&orderBy=" + this.state.orderBy + this.state.filterStr + "&prdName=" + (this.state.searchStr && this.state.searchStr != "" ? this.state.searchStr : ""),
                    navigation: this.props.navigation,
                    itemType: 3,
                    classId: state.params.classId,
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 351
                    }
                })
            );
        }
    }]);
    return Classify;
}(_react2.default.Component);

exports.default = Classify;

var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: 'column'
    },
    filters: {

        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        backgroundColor: "#fff",
        height: 45,
        borderBottomWidth: 1,
        borderColor: _StyleConfig2.default.colors.lineColor

    },
    filterItem: {

        flex: 1,
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center'

    },

    filterItemFont: {
        paddingVertical: 6,
        textAlign: 'center',
        alignItems: 'center',

        fontSize: 14,
        color: _StyleConfig2.default.colors.B6Color
    },
    filterItemFontActive: {
        color: _StyleConfig2.default.colors.mainColor
    }

});