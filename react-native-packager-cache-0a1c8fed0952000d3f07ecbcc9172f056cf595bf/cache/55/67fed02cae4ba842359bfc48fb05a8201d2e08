Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Volumes/work/reactnative/petShop/js/components/GridList.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _lodash = require('lodash');

var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

var _StyleConfig = require('../base/StyleConfig');

var _StyleConfig2 = babelHelpers.interopRequireDefault(_StyleConfig);

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var GridList = function (_React$Component) {
  babelHelpers.inherits(GridList, _React$Component);

  function GridList(props) {
    babelHelpers.classCallCheck(this, GridList);
    return babelHelpers.possibleConstructorReturn(this, (GridList.__proto__ || Object.getPrototypeOf(GridList)).call(this, props));
  }

  babelHelpers.createClass(GridList, [{
    key: '_onPress',
    value: function _onPress(routerName, classId, name) {
      return this.props.navigation.navigate(routerName, { classId: classId, name: name });
    }
  }, {
    key: 'renderGridItems',
    value: function renderGridItems(imgList) {
      var gridItems = [];
      for (var i = 0; i < imgList.length; i++) {
        gridItems.push(_react2.default.createElement(
          _reactNative.TouchableOpacity,
          { style: styles.gridItem, key: i, onPress: _lodash2.default.throttle(this._onPress.bind(this, imgList[i]['routerName'], imgList[i]['classId'], imgList[i]['name']), 1000, {

              'trailing': false
            }), __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: imgList[i]['imgUrl'], key: i, style: styles.gridItemImg, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          }),
          imgList[i]['name'] && this.props.showText ? _react2.default.createElement(
            _reactNative.Text,
            { style: styles.gridItemText, __source: {
                fileName: _jsxFileName,
                lineNumber: 37
              }
            },
            imgList[i]['name']
          ) : null
        ));
      }
      return gridItems;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.grid, __source: {
            fileName: _jsxFileName,
            lineNumber: 45
          }
        },
        this.renderGridItems(this.props.gridList)
      );
    }
  }]);
  return GridList;
}(_react2.default.Component);

exports.default = GridList;


var styles = _reactNative.StyleSheet.create({
  grid: {

    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'center',
    backgroundColor: '#fff'
  },
  gridItem: {

    width: width / 5,
    height: 152 * (width / _StyleConfig2.default.pixSize),
    justifyContent: 'center',
    alignItems: 'center',
    flexDirection: 'column'

  },
  gridItemImg: {

    width: (width - 180) / 5,
    height: (width - 180) / 5

  },
  gridItemText: {
    marginTop: 5,
    fontSize: 13,
    color: '#6b6b6b',
    backgroundColor: 'transparent'

  }
});